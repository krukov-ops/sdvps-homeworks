#version: '3'
volumes:
    prometheus_data: {}
    grafana_data: {}
networks:
    krukov-ns-my-netology-hw:
        driver: bridge
        ipam:
          config:
            - subnet: 10.5.0.0/16
services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    container_name: krukov-ns-netology-prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: unless-stopped
    networks:
      - krukov-ns-my-netology-hw
  pushgateway:
    image: prom/pushgateway:latest
    restart: always
    container_name: krukov-ns-netology-pushgateway
#    expose:
#      - 9091
    ports:
      - 9091:9091
    networks:
      - krukov-ns-my-netology-hw
    

  grafana:
    image: grafana/grafana:latest
    container_name: krukov-ns-netology-grafana
    depends_on:
      - prometheus
    ports:
      - 81:3000
    volumes:
      - ./custom.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
#      - ./grafana/provisioning/:/etc/grafana/provisioning/
#    env_file:
#      - ./grafana/config.monitoring
    networks:
      - krukov-ns-my-netology-hw
    restart: always








#  node-exporter:
#    image: quay.io/prometheus/node-exporter:latest
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#      - /:/host:ro,rslave
#    command: 
#      - '--path.rootfs=/host'
#      - '--path.procfs=/host/proc' 
#      - '--path.sysfs=/host/sys'
#      - --collector.filesystem.ignored-mount-points
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    ports:
#      - 9100:9100
#    networks:
#      - back-tier
#    restart: always
#    deploy:
#      mode: global

#  alertmanager:
#    image: prom/alertmanager
#    ports:
#      - 9093:9093
#    volumes:
#      - ./alertmanager/:/etc/alertmanager/
#    networks:
#      - back-tier
#    restart: always
#    command:
#      - '--config.file=/etc/alertmanager/config.yml'
#      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#    ports:
#      - 8080:8080
#    networks:
#      - back-tier
#    restart: always
#    deploy:
#      mode: global


